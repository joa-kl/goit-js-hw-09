{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAmBb,SAASQ,GAAST,SAAEA,EAAQC,MAAEA,IAC5BJ,EAAAa,OAAOC,QAAQ,uBAAqBX,QAAiBC,M,CAEvD,SAASW,GAAQZ,SAAEA,EAAQC,MAAEA,IAC3BJ,EAAAa,OAAOG,QAAQ,sBAAoBb,QAAeC,M,CAnBvCa,SAASC,cAAc,SAC/BC,iBAAiB,UACtB,SAAkBC,GAChBA,EAAMC,iBACN,IAAIjB,EAAQkB,OAAOF,EAAMG,cAAcnB,MAAMoB,OAC7C,MAAMC,EAASH,OAAOF,EAAMG,cAAcE,OAAOD,OAC3CE,EAAOJ,OAAOF,EAAMG,cAAcG,KAAKF,OAC7C,IAAK,IAAIG,EAAI,EAAGA,GAAKF,EAAQE,GAAK,EAChCzB,EAAcyB,EAAGvB,GACdwB,KAAKhB,GACLiB,MAAMd,GACTX,GAASsB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector(\".form\");\nform.addEventListener(\"submit\", onSubmit);\nfunction onSubmit(event) {\n  event.preventDefault();\n  let delay = Number(event.currentTarget.delay.value);\n  const amount = Number(event.currentTarget.amount.value);\n  const step = Number(event.currentTarget.step.value);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(onSucces)\n      .catch(onError);\n    delay += step;\n  }\n}\n\nfunction onSucces({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction onError({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onSucces","Notify","success","$47d4ff9957288465$var$onError","failure","document","querySelector","addEventListener","event","preventDefault","Number","currentTarget","value","amount","step","i","then","catch"],"version":3,"file":"03-promises.33751f28.js.map"}